<Window x:Class="PiP_Tool.Views.CropperWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:viewModels="clr-namespace:PiP_Tool.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        AllowsTransparency="True" 
        WindowStyle="None" 
        ResizeMode="NoResize"
        Top="{Binding WindowTop, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Left="{Binding WindowLeft, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Width="{Binding WindowWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Height="{Binding WindowHeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
        Title="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">

    <Window.DataContext>
        <viewModels:CropperViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <system:Double x:Key="Opacity">0.75</system:Double>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.Background>
        <SolidColorBrush Opacity="0" Color="White"/>
    </Window.Background>

    <Canvas x:Name="LayoutRoot"
            Margin="{Binding CanvasMargin, UpdateSourceTrigger=PropertyChanged}">

        <Rectangle 
            x:Name="HideTop"
            Canvas.Top="0"
            Canvas.Left="0"
            Opacity="{StaticResource Opacity}"
            Fill="Black"
            Width="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
            Height="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"/>
        <Rectangle
            x:Name="HideLeft"
            Canvas.Top="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
            Canvas.Left="0"
            Opacity="{StaticResource Opacity}"
            Fill="Black"
            Width="{Binding (Canvas.Left), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
            Height="{Binding ActualHeight, ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"/>
        <Rectangle
            x:Name="HideBottom"
            Canvas.Bottom="0"
            Canvas.Left="0"
            Opacity="{StaticResource Opacity}"
            Fill="Black"
            Width="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
            Height="{Binding (Canvas.Bottom), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
        />
        <Rectangle
            x:Name="HideRight"
            Canvas.Top="{Binding (Canvas.Top), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
            Canvas.Right="0"
            Opacity="{StaticResource Opacity}"
            Fill="Black"
            Width="{Binding (Canvas.Right), ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
            Height="{Binding ActualHeight, ElementName=Cropper, UpdateSourceTrigger=PropertyChanged}"
        />

        <ContentControl x:Name="Cropper"
                    MinHeight="{Binding MinHeight, UpdateSourceTrigger=PropertyChanged}"
                    MinWidth="{Binding MinWidth, UpdateSourceTrigger=PropertyChanged}"
                    Width="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Height="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    MaxHeight="{Binding MaxHeight, UpdateSourceTrigger=PropertyChanged}"
                    MaxWidth="{Binding MaxWidth, UpdateSourceTrigger=PropertyChanged}"
                    Canvas.Top="{Binding Top, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Canvas.Left="{Binding Left, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Canvas.Bottom="{Binding Bottom, UpdateSourceTrigger=PropertyChanged}"
                    Canvas.Right="{Binding Right, UpdateSourceTrigger=PropertyChanged}"
                    Selector.IsSelected="True"
                    Style="{StaticResource MoveResize}">
            <Rectangle Fill="White"
                        Stretch="Fill"
                        Opacity="0.01"
                        IsHitTestVisible="False"/>
        </ContentControl>
           
    </Canvas>

</Window>
